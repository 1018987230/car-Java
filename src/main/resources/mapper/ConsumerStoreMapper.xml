<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.nft.dao.ConsumerStoreMapper">
    <resultMap id="BaseResultMap" type="com.example.nft.entity.ConsumerStore">
        <id column="store_uuid" property="storeUuid"/>
        <result column="consumer_uuid" property="consumerUuid"/>
        <result column="store_uuid" property="storeUuid"/>
    </resultMap>

    <!--  顾客和店铺进行关联  -->
    <insert id="consumerAndStore" parameterType="com.example.nft.entity.ConsumerStore">
        INSERT INTO `t_consumer_store` (consumer_uuid, store_uuid) VALUES(#{consumerUuid},#{storeUuid})
    </insert>

    <!--  删除顾客和店铺的关联  -->
    <delete id="deleteConsumerStore" parameterType="com.example.nft.entity.ConsumerStore">
        DELETE FROM t_consumer_store where store_uuid=#{storeUuid} and consumer_uuid=#{consumerUuid}
    </delete>

    <!--  联合主键查询  -->
    <select id="selectConsumerStore" resultMap="BaseResultMap">
        SELECT * from t_consumer_store where consumer_uuid=#{consumerUuid} and store_uuid=#{storeUuid}
    </select>


    <resultMap id="ConsumerByStore" type="com.example.nft.entity.Consumer">
        <id column="consumer_id" property="consumerId"/>
        <result column="consumer_name" property="consumerName"/>
        <result column="consumer_uuid" property="consumerUuid"/>
        <result column="consumer_sex" property="consumerSex"/>
        <result column="consumer_birthday" property="consumerBirthday"/>
        <result column="consumer_level" property="consumerLevel"/>
        <result column="consumer_phone" property="consumerPhone"/>
        <result column="consumer_status" property="consumerStatus"/>
        <result column="consumer_phone" property="consumerPhone"/>
        <result column="create_time" property="createTime"/>
    </resultMap>
    <!--  根据店铺uuid查询到当前店铺下的顾客  -->
    <select id="getConsumerByStoreUuid" resultMap="ConsumerByStore">
        select c.*
        from t_consumer_store cs, t_consumer c
        where cs.consumer_uuid = c.consumer_uuid and cs.store_uuid = #{storeUuid}
        limit #{currentPage}, 20
    </select>


    <resultMap id="StoreByConsumer" type="com.example.nft.entity.Store">
        <id column="store_id" property="storeId"/>
        <result column="store_name" property="storeName"/>
        <result column="store_owner" property="storeOwner"/>
        <result column="store_phone" property="storePhone"/>
        <result column="store_uuid" property="storeUuid"/>
        <result column="store_address" property="storeAddress"/>
        <result column="store_business_scope" property="storeBusinessScope"/>
        <result column="store_remark" property="storeRemark"/>
        <result column="store_status" property="storeStatus"/>
        <result column="create_time" property="createTime"/>
    </resultMap>
    <!--  根据顾客id查询到顾客加入的店铺  -->
    <select id="getStoreByConsumerUuid" resultMap="StoreByConsumer">
        select s.*
        from t_consumer_store cs, t_store s
        where cs.store_uuid = s.store_uuid and cs.consumer_uuid = #{consumerUuid};

    </select>


</mapper>