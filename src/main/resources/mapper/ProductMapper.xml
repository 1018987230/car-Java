<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.nft.dao.ProductMapper">
    <resultMap id="BaseResultMap" type="com.example.nft.entity.Product">
        <id column="product_id" property="productId"/>
        <result column="store_uuid" property="storeUuid"/>
        <result column="product_uuid" property="productUuid"/>
        <result column="product_name" property="productName"/>
        <result column="product_quantity" property="productQuantity"/>
        <result column="product_unit" property="productUnit"/>
        <result column="product_price" property="productPrice"/>
        <result column="product_in" property="productIn"/>
        <result column="product_status" property="productStatus"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <sql id="Base_List">
        store_uuid, product_uuid, product_name, product_quantity, product_unit, product_price, product_in,create_time
    </sql>

    <insert id="insert" parameterType="com.example.nft.entity.Product">
        insert t_product (store_uuid,product_uuid,product_name,product_quantity,product_unit,product_price,product_in)
            values(#{storeUuid},#{productUuid},#{productName},#{productQuantity},#{productUnit},#{productPrice},#{productIn})
    </insert>

    <update id="updateInfoByUuid">
        update t_product
        <set>
            <if test="productName != null and productName != '' ">
                product_name=#{productName}
            </if>
            <if test="productUnit != null">
                , product_unit=#{productUnit}
            </if>
            <if test="productPrice != null">
                , product_price=#{productPrice}
            </if>
            <if test="productIn != null">
                , product_in=#{productIn}
            </if>
        </set>
        where product_uuid=#{productUuid}
    </update>

    <update id="updateQuantityByUuid">
        update t_product set product_quantity=#{productQuantity} where product_uuid=#{productUuid}
    </update>

    <update id="updateStatusByUuid">
        update t_product set product_status=#{productStatus} where product_uuid=#{productUuid}
    </update>

    <select id="selectMany" resultMap="BaseResultMap">
        select <include refid="Base_List"/> from t_product
        <where>
            <if test="productName != null and productName != ''">
                product_name like concat('%',#{productName},'%') and
            </if>
            store_uuid=#{storeUuid} and product_status='0'
        </where>
        order by create_time desc
        limit #{currentPage}, 20
    </select>

    <select id="selectCount" resultType="java.lang.Integer">
        select count(*) from t_product
        <where>
            <if test="productName != null and productName != ''">
                product_name like concat('%',#{productName},'%') and
            </if>
            store_uuid=#{storeUuid} and product_status='0'
        </where>
    </select>

    <select id="selectByUuid" resultMap="BaseResultMap">
        select <include refid="Base_List"/> from t_product
        where product_uuid=#{productUuid} and product_status='0'
    </select>


</mapper>

